---
commonOverlays:
  - name: customize label
    query: ..[?(@["app.kubernetes.io/instance"] == "resume-johndoe")]
    value:
      #+operator-builder:collection:field:name="profile.firstName",type=string,default="John",replace="john"
      #+operator-builder:collection:field:name="profile.lastName",type=string,default="Doe",replace="doe"
      app.kubernetes.io/instance: "resume-johndoe" 
  - name: add standard labels
    query: ..labels
    value:
      app.kubernetes.io/managed-by: resume-operator
      app.kubernetes.io/part-of: resume
      app.kubernetes.io/created-by: resume-controller-manager
      #+operator-builder:collection:field:name="web.image.tag",type=string,default="latest"
      app.kubernetes.io/version: latest
yamlFiles:
  - name: Add Markers to Profile
    path: ./resume/configmap-profile.yaml
    overlays:
      - query: data
        value:
          #+operator-builder:field:name="profile.firstName",type=string,default=John,replace=FirstName
          #+operator-builder:field:name="profile.lastName",type=string,default=Doe,replace=LastName
          #+operator-builder:field:name="profile.phoneNumber",type=string,default="",replace=PhoneNumber
          #+operator-builder:field:name="profile.email",type=string,default="",replace=Email
          #+operator-builder:field:name="profile.linkedinURL",type=string,default="",replace=LinkedInURL
          #+operator-builder:field:name="profile.githubURL",type=string,default="",replace=GitHubURL
          #+operator-builder:field:name="profile.location",type=string,default="South Carolina",replace=Location
          #+operator-builder:field:name="profile.overview",type=string,default="",replace=Overview
          #+operator-builder:field:name="profile.coreCompetencies",type=string,default="",replace=CoreCompetencies
          #+operator-builder:field:name="profile.projects",type=string,default="",replace=Projects
          #+operator-builder:field:name="profile.skills",type=string,default="",replace=Skills
          "%k": "%v"
  - name: Add Markers to Certs
    path: ./resume/configmap-cert.yaml
    overlays:
      - query: data
        value:
          #+operator-builder:field:name=title,type=string,replace="Title"
          #+operator-builder:field:name=issuer,type=string,replace="Issuer"
          #+operator-builder:field:name=earnedDate,type=string,replace="2006-01-02"
          #+operator-builder:field:name=alias,type=string,replace="Alias"
          #+operator-builder:field:name=validationURL,type=string,default="",replace="ValidationURL"
          #+operator-builder:field:name=imageURL,type=string,default="",replace="ImageURL"
          "%k": "%v"
  - name: Add Markers to Experience
    path: ./resume/configmap-experience.yaml
    overlays:
      - query: data
        value:
          #+operator-builder:field:name=employer,type=string,replace=Employer
          #+operator-builder:field:name=location,type=string,replace=Location
          #+operator-builder:field:name=startDate,type=string,replace="2006-01-02"
          #+operator-builder:field:name=endDate,type=string,replace=Present
          #+operator-builder:field:name="position.title",type=string,replace=Title
          #+operator-builder:field:name="position.startDate",default="",type=string,replace="2006-01-03"
          #+operator-builder:field:name="position.endDate",default="",type=string,replace="2006-01-04"
          #+operator-builder:field:name="position.highlights",default="",type=string,replace=Highlights
          "%k": "%v"
  - name: Add Markers to Site Files
    path: ./resume/
    overlays:
      - name: Add Markers to Config
        query: data[?(@["config.toml"])]
        value:
          #+operator-builder:field:name=baseURL,type=string,default="example.com",replace="example.com"
          #+operator-builder:field:name=pageTitle,type=string,default="John Doe - CV",replace="John Doe - CV"
          #+operator-builder:field:name=pageCount,type=string,default="1",replace="PageCount"
          "config.toml": "%v"
      - name: Make resume image customizable
        query: ..containers[*][?(@.name == "resume")]
        value:
          #+operator-builder:field:name="web.image.registry",type=string,default="",replace="ghcr.io/"
          #+operator-builder:field:name="web.image.name",type=string,default="jefedavis/resume",replace="jefedavis/resume"
          #+operator-builder:field:name="web.image.tag",type=string,default="latest",replace="latest"
          image: "%v"
          #+operator-builder:field:name="web.image.pullPolicy",type=string,default="IfNotPresent"
          imagePullPolicy: IfNotPresent
      - name: Make resume image customizable
        query: ..containers[*][?(@.name == "pdf-converter")]
        value:
          #+operator-builder:field:name="pdf.image.registry",type=string,default="",replace="ghcr.io/"
          #+operator-builder:field:name="pdf.image.name",type=string,default="jefedavis/resume",replace="jefedavis/resume-pdf-converter"
          #+operator-builder:field:name="pdf.image.tag",type=string,default="latest",replace="latest"
          image: "%v"
          #+operator-builder:field:name="pdf.image.pullPolicy",type=string,default="IfNotPresent"
          imagePullPolicy: IfNotPresent
      - name: customize hostname
        query: ..rules[*][?(@.host == "example.com")]
        value:
          #+operator-builder:field:name=baseURL,type=string,default="example.com"
          host: "%v"
      - name: customize tls
        query: ..tls[*].hosts
        value:
          #+operator-builder:field:name=baseURL,type=string,default="example.com"
          - example.com
        action: replace
      - name: customize ingressClass
        query: spec[?(@.ingressClassName == "nginx")]
        value:
          #+operator-builder:field:name=ingressClass,type=string,default="nginx"
          ingressClassName: nginx
      - name: customize certIssuer
        query: metadata[?($.kind=="Ingress")]
        value:
          annotations:
            #+operator-builder:field:name="certIssuer",type=string,default="letsencrypt-staging"
            cert-manager.io/cluster-issuer: letsencrypt-staging

          
        
        